<Window x:Class="Hourglass.TimerWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:hg="clr-namespace:Hourglass"
        Title="Hourglass" Height="150" Width="350" MinHeight="150" MinWidth="250"
        Loaded="WindowLoaded" KeyDown="WindowKeyDown" MouseDown="WindowMouseDown" StateChanged="WindowStateChanged" Closing="WindowClosing">
    <Window.Resources>
        <Style TargetType="{x:Type ProgressBar}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <Grid>
                            <Border Name="PART_Track" Background="#EEEEEE"/>
                            <Border Name="PART_Indicator" Background="#3665B3" HorizontalAlignment="Left"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TitleTextBoxStyle" TargetType="TextBox">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding ElementName=TitleTextBox, Path=IsFocused}" Value="False"/>
                        <Condition Binding="{Binding ElementName=TimerTextBox, Path=IsFocused}" Value="False"/>
                        <Condition Binding="{Binding ElementName=StartButton, Path=IsFocused}" Value="False"/>
                        <Condition Binding="{Binding ElementName=PauseButton, Path=IsFocused}" Value="False"/>
                        <Condition Binding="{Binding ElementName=ResumeButton, Path=IsFocused}" Value="False"/>
                        <Condition Binding="{Binding ElementName=StopButton, Path=IsFocused}" Value="False"/>
                        <Condition Binding="{Binding ElementName=ResetButton, Path=IsFocused}" Value="False"/>
                        <Condition Binding="{Binding ElementName=CloseButton, Path=IsFocused}" Value="False"/>
                        <Condition Binding="{Binding ElementName=CancelButton, Path=IsFocused}" Value="False"/>
                        <Condition Binding="{Binding ElementName=InnerGrid, Path=IsMouseOver}" Value="False"/>
                        <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=hg:TimerWindow}, Path=ContextMenu.IsOpen}" Value="False"/>
                        <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=hg:TimerWindow}, Path=Timer.State}" Value="Running"/>
                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value=""/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0.0" Duration="0:0:0.3">
                                    <DoubleAnimation.EasingFunction>
                                        <ExponentialEase EasingMode="EaseOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiDataTrigger.EnterActions>
                    <MultiDataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1.0" Duration="0:0:0.3">
                                    <DoubleAnimation.EasingFunction>
                                        <ExponentialEase EasingMode="EaseOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiDataTrigger.ExitActions>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ButtonPanelStyle" TargetType="StackPanel">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding ElementName=TitleTextBox, Path=IsFocused}" Value="False"/>
                        <Condition Binding="{Binding ElementName=TimerTextBox, Path=IsFocused}" Value="False"/>
                        <Condition Binding="{Binding ElementName=StartButton, Path=IsFocused}" Value="False"/>
                        <Condition Binding="{Binding ElementName=PauseButton, Path=IsFocused}" Value="False"/>
                        <Condition Binding="{Binding ElementName=ResumeButton, Path=IsFocused}" Value="False"/>
                        <Condition Binding="{Binding ElementName=StopButton, Path=IsFocused}" Value="False"/>
                        <Condition Binding="{Binding ElementName=ResetButton, Path=IsFocused}" Value="False"/>
                        <Condition Binding="{Binding ElementName=CloseButton, Path=IsFocused}" Value="False"/>
                        <Condition Binding="{Binding ElementName=CancelButton, Path=IsFocused}" Value="False"/>
                        <Condition Binding="{Binding ElementName=InnerGrid, Path=IsMouseOver}" Value="False"/>
                        <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=hg:TimerWindow}, Path=ContextMenu.IsOpen}" Value="False"/>
                        <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=hg:TimerWindow}, Path=Timer.State}" Value="Running"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0.0" Duration="0:0:0.3">
                                    <DoubleAnimation.EasingFunction>
                                        <ExponentialEase EasingMode="EaseOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiDataTrigger.EnterActions>
                    <MultiDataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1.0" Duration="0:0:0.3">
                                    <DoubleAnimation.EasingFunction>
                                        <ExponentialEase EasingMode="EaseOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiDataTrigger.ExitActions>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="#0066CC"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="Margin" Value="7 0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <TextBlock>
                            <ContentPresenter RecognizesAccessKey="True"/>
                        </TextBlock>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand"/>
                                <Setter Property="Foreground" Value="#FF0000"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo/>
    </Window.TaskbarItemInfo>
    <Grid x:Name="OuterGrid">
        <ProgressBar x:Name="ProgressBar"/>
        <Border x:Name="OuterNotificationBorder" Background="#C75050" IsHitTestVisible="False" Opacity="0"/>
        <Grid x:Name="InnerGrid" Background="White" Margin="10">
            <StackPanel x:Name="ControlsPanel" Margin="20 0" VerticalAlignment="Center">
                <TextBox x:Name="TitleTextBox" Background="{x:Null}" BorderBrush="{x:Null}" FontFamily="Segoe UI" Foreground="DarkGray" Style="{StaticResource TitleTextBoxStyle}" Text="{Binding RelativeSource={RelativeSource AncestorType=hg:TimerWindow}, Path=Timer.Options.Title, UpdateSourceTrigger=PropertyChanged}" TextAlignment="Center" hg:Watermark.Hint="Click to enter title" KeyDown="TitleTextBoxKeyDown"/>
                <TextBox x:Name="TimerTextBox" Background="{x:Null}" BorderBrush="{x:Null}" FontFamily="Segoe UI Light, Segoe UI" FontSize="18" Margin="0 1 0 4" TextAlignment="Center" hg:Watermark.Hint="Click to enter time or date" MouseDown="TimerTextBoxMouseDown"/>
                <StackPanel x:Name="ButtonPanel" HorizontalAlignment="Center" Orientation="Horizontal" Style="{StaticResource ButtonPanelStyle}">
                    <Button x:Name="StartButton" Content="Start" Click="StartButtonClick" IsDefault="True"/>
                    <Button x:Name="PauseButton" Content="Pause" Click="PauseButtonClick"/>
                    <Button x:Name="ResumeButton" Content="Resume" Click="ResumeButtonClick"/>
                    <Button x:Name="StopButton" Content="Stop" Click="StopButtonClick"/>
                    <Button x:Name="ResetButton" Content="Reset" Click="ResetButtonClick"/>
                    <Button x:Name="CloseButton" Content="Close" Click="CloseButtonClick"/>
                    <Button x:Name="CancelButton" Content="Cancel" Click="CancelButtonClick" IsCancel="True"/>
                </StackPanel>
            </StackPanel>
        </Grid>
        <Border x:Name="InnerNotificationBorder" BorderBrush="#C75050" BorderThickness="1" IsHitTestVisible="False" Margin="15" Opacity="0"/>
    </Grid>
</Window>
